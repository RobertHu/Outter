//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace iExchange.StateServer.LinkedStateServer
{
	using System.Diagnostics;
	using System.Xml.Serialization;
	using System;
	using System.Web.Services.Protocols;
	using System.ComponentModel;
	using System.Web.Services;

	using iExchange.Common;

	/// <remarks/>
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSoap", Namespace = "http://www.omnicare.com/StateServer/")]
	public class Service : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		/// <remarks/>
		public Service()
		{
			string urlSetting = System.Configuration.ConfigurationSettings.AppSettings["iExchange.StateServer.LinkedStateServer.Service"];
			if ((urlSetting != null))
			{
				this.Url = string.Concat(urlSetting, "");
			}
			else
			{
				throw new ApplicationException("iExchange.StateServer.LinkedStateServer.Service not configured!");
				//this.Url = "http://192.168.1.100/iExchange/StateServer/Service.asmx";
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/HelloWorld", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string HelloWorld()
		{
			object[] results = this.Invoke("HelloWorld", new object[0]);
			return ((string)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
		}

		/// <remarks/>
		public string EndHelloWorld(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Register", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool Register(Token token, string url)
		{
			object[] results = this.Invoke("Register", new object[] {
																		token,
																		url});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginRegister(Token token, string url, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Register", new object[] {
																 token,
																 url}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndRegister(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UnRegister", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool UnRegister(Token token, string url)
		{
			object[] results = this.Invoke("UnRegister", new object[] {
																		  token,
																		  url});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUnRegister(Token token, string url, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UnRegister", new object[] {
																   token,
																   url}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndUnRegister(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Login", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool Login(Token token)
		{
			object[] results = this.Invoke("Login", new object[] {
																	 token});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginLogin(Token token, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Login", new object[] {
															  token}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndLogin(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Logout", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool Logout(Token token)
		{
			object[] results = this.Invoke("Logout", new object[] {
																	  token});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginLogout(Token token, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Logout", new object[] {
															   token}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndLogout(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/ChangePassword", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool ChangePassword(Token token, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] System.Byte[] oldPassword, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] System.Byte[] newPassword)
		{
			object[] results = this.Invoke("ChangePassword", new object[] {
																			  token,
																			  oldPassword,
																			  newPassword});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginChangePassword(Token token, System.Byte[] oldPassword, System.Byte[] newPassword, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("ChangePassword", new object[] {
																	   token,
																	   oldPassword,
																	   newPassword}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndChangePassword(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetInitData", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Data.DataSet GetInitData(Token token, System.Xml.XmlNode permittedKeys, out int commandSequence)
		{
			object[] results = this.Invoke("GetInitData", new object[] {
																		   token,
																		   permittedKeys});
			commandSequence = ((int)(results[1]));
			return ((System.Data.DataSet)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetInitData(Token token, System.Xml.XmlNode permittedKeys, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetInitData", new object[] {
																	token,
																	permittedKeys}, callback, asyncState);
		}

		/// <remarks/>
		public System.Data.DataSet EndGetInitData(System.IAsyncResult asyncResult, out int commandSequence)
		{
			object[] results = this.EndInvoke(asyncResult);
			commandSequence = ((int)(results[1]));
			return ((System.Data.DataSet)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/SetQuotation", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool SetQuotation(Token token, string quotation)
		{
			object[] results = this.Invoke("SetQuotation", new object[] {
																			token,
																			quotation});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginSetQuotation(Token token, string quotation, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("SetQuotation", new object[] {
																	 token,
																	 quotation}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndSetQuotation(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/DiscardQuotation", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool DiscardQuotation(Token token, System.Guid instrumentID)
		{
			object[] results = this.Invoke("DiscardQuotation", new object[] {
																				token,
																				instrumentID});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginDiscardQuotation(Token token, System.Guid instrumentID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("DiscardQuotation", new object[] {
																		 token,
																		 instrumentID}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndDiscardQuotation(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateInstrument", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool UpdateInstrument(Token token, System.Xml.XmlNode instrument)
		{
			object[] results = this.Invoke("UpdateInstrument", new object[] {
																				token,
																				instrument});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdateInstrument(Token token, System.Xml.XmlNode instrument, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateInstrument", new object[] {
																		 token,
																		 instrument}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndUpdateInstrument(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateQuotePolicy", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool UpdateQuotePolicy(Token token, System.Xml.XmlNode quotePolicy,out int error)
		{
			object[] results = this.Invoke("UpdateQuotePolicy", new object[] {
																				 token,
																				 quotePolicy});
            error = ((int)results[1]);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdateQuotePolicy(Token token, System.Xml.XmlNode quotePolicy, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateQuotePolicy", new object[] {
																		  token,
																		  quotePolicy}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndUpdateQuotePolicy(System.IAsyncResult asyncResult,out int error)
		{
			object[] results = this.EndInvoke(asyncResult);
            error = ((int)results[1]);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetInstrumentForSetting", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Data.DataSet GetInstrumentForSetting(Token token)
		{
			object[] results = this.Invoke("GetInstrumentForSetting", new object[] {
																					   token});
			return ((System.Data.DataSet)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetInstrumentForSetting(Token token, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetInstrumentForSetting", new object[] {
																				token}, callback, asyncState);
		}

		/// <remarks/>
		public System.Data.DataSet EndGetInstrumentForSetting(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Data.DataSet)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateInstrumentSetting", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Data.DataSet UpdateInstrumentSetting(Token token, System.Xml.XmlNode instrumentSetting)
		{
			object[] results = this.Invoke("UpdateInstrumentSetting", new object[] {
																					   token,
																					   instrumentSetting});
			return ((System.Data.DataSet)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdateInstrumentSetting(Token token, System.Xml.XmlNode instrumentSetting, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateInstrumentSetting", new object[] {
																				token,
																				instrumentSetting}, callback, asyncState);
		}

		/// <remarks/>
		public System.Data.DataSet EndUpdateInstrumentSetting(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Data.DataSet)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateOrder", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool UpdateOrder(Token token, System.Xml.XmlNode orders)
		{
			object[] results = this.Invoke("UpdateOrder", new object[] {
																		   token,
																		   orders});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdateOrder(Token token, System.Xml.XmlNode orders, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateOrder", new object[] {
																	token,
																	orders}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndUpdateOrder(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/UpdateAccountLock", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool UpdateAccountLock(Token token, System.Xml.XmlNode accountLockChanges)
		{
			object[] results = this.Invoke("UpdateAccountLock", new object[] {
																				 token,
																				 accountLockChanges});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdateAccountLock(Token token, System.Xml.XmlNode accountLockChanges, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateAccountLock", new object[] {
																		  token,
																		  accountLockChanges}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndUpdateAccountLock(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Quote", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void Quote(Token token, System.Guid instrumentID, System.Double quoteLot)
		{
			this.Invoke("Quote", new object[] {
												  token,
												  instrumentID,
												  quoteLot});
		}

		/// <remarks/>
		public System.IAsyncResult BeginQuote(Token token, System.Guid instrumentID, System.Double quoteLot, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Quote", new object[] {
															  token,
															  instrumentID,
															  quoteLot}, callback, asyncState);
		}

		/// <remarks/>
		public void EndQuote(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Chat", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void Chat(Token token, System.Xml.XmlNode message)
		{
			this.Invoke("Chat", new object[] {
												 token,
												 message});
		}

		/// <remarks/>
		public System.IAsyncResult BeginChat(Token token, System.Xml.XmlNode message, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Chat", new object[] {
															 token,
															 message}, callback, asyncState);
		}

		/// <remarks/>
		public void EndChat(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Answer", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void Answer(Token token, System.Xml.XmlNode quotation)
		{
			this.Invoke("Answer", new object[] {
												   token,
												   quotation});
		}

		/// <remarks/>
		public System.IAsyncResult BeginAnswer(Token token, System.Xml.XmlNode quotation, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Answer", new object[] {
															   token,
															   quotation}, callback, asyncState);
		}

		/// <remarks/>
		public void EndAnswer(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Place", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public TransactionError Place(Token token, System.Xml.XmlNode tran, out string tranCode)
		{
			object[] results = this.Invoke("Place", new object[] {
																	 token,
																	 tran});
			tranCode = ((string)(results[1]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginPlace(Token token, System.Xml.XmlNode tran, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Place", new object[] {
															  token,
															  tran}, callback, asyncState);
		}

		/// <remarks/>
		public TransactionError EndPlace(System.IAsyncResult asyncResult, out string tranCode)
		{
			object[] results = this.EndInvoke(asyncResult);
			tranCode = ((string)(results[1]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Cancel", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public TransactionError Cancel(Token token, System.Guid tranID)
		{
			object[] results = this.Invoke("Cancel", new object[] {
																	  token,
																	  tranID});
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginCancel(Token token, System.Guid tranID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Cancel", new object[] {
															   token,
															   tranID}, callback, asyncState);
		}

		/// <remarks/>
		public TransactionError EndCancel(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Cancel2", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public TransactionError Cancel2(Token token, System.Guid tranID)
		{
			object[] results = this.Invoke("Cancel2", new object[] {
																	   token,
																	   tranID});
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginCancel2(Token token, System.Guid tranID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Cancel2", new object[] {
																token,
																tranID}, callback, asyncState);
		}

		/// <remarks/>
		public TransactionError EndCancel2(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Execute", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public TransactionError Execute(Token token, System.Guid tranID, string buyPrice, string sellPrice, System.Guid executedOrderID, out System.Xml.XmlNode xmlTran)
		{
			object[] results = this.Invoke("Execute", new object[] {
																	   token,
																	   tranID,
																	   buyPrice,
																	   sellPrice,
																	   executedOrderID});
			xmlTran = ((System.Xml.XmlNode)(results[1]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginExecute(Token token, System.Guid tranID, string buyPrice, string sellPrice, System.Guid executedOrderID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Execute", new object[] {
																token,
																tranID,
																buyPrice,
																sellPrice,
																executedOrderID}, callback, asyncState);
		}

		/// <remarks/>
		public TransactionError EndExecute(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran)
		{
			object[] results = this.EndInvoke(asyncResult);
			xmlTran = ((System.Xml.XmlNode)(results[1]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Assign", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public TransactionError Assign(Token token, ref System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlInstrument)
		{
			object[] results = this.Invoke("Assign", new object[] {
																	  token,
																	  xmlTran});
			xmlTran = ((System.Xml.XmlNode)(results[1]));
			xmlAccount = ((System.Xml.XmlNode)(results[2]));
			xmlInstrument = ((System.Xml.XmlNode)(results[3]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginAssign(Token token, System.Xml.XmlNode xmlTran, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Assign", new object[] {
															   token,
															   xmlTran}, callback, asyncState);
		}

		/// <remarks/>
		public TransactionError EndAssign(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlInstrument)
		{
			object[] results = this.EndInvoke(asyncResult);
			xmlTran = ((System.Xml.XmlNode)(results[1]));
			xmlAccount = ((System.Xml.XmlNode)(results[2]));
			xmlInstrument = ((System.Xml.XmlNode)(results[3]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Execute2", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public TransactionError Execute2(Token token, ref System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount)
		{
			object[] results = this.Invoke("Execute2", new object[] {
																		token,
																		xmlTran});
			xmlTran = ((System.Xml.XmlNode)(results[1]));
			xmlAccount = ((System.Xml.XmlNode)(results[2]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginExecute2(Token token, System.Xml.XmlNode xmlTran, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Execute2", new object[] {
																 token,
																 xmlTran}, callback, asyncState);
		}

		/// <remarks/>
		public TransactionError EndExecute2(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount)
		{
			object[] results = this.EndInvoke(asyncResult);
			xmlTran = ((System.Xml.XmlNode)(results[1]));
			xmlAccount = ((System.Xml.XmlNode)(results[2]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Delete", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public TransactionError Delete(Token token, System.Guid orderID, out System.Xml.XmlNode affectedOrders, out System.Xml.XmlNode xmlAccount)
		{
			object[] results = this.Invoke("Delete", new object[] {
																	  token,
																	  orderID});
			affectedOrders = ((System.Xml.XmlNode)(results[1]));
			xmlAccount = ((System.Xml.XmlNode)(results[2]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginDelete(Token token, System.Guid orderID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Delete", new object[] {
															   token,
															   orderID}, callback, asyncState);
		}

		/// <remarks/>
		public TransactionError EndDelete(System.IAsyncResult asyncResult, out System.Xml.XmlNode affectedOrders, out System.Xml.XmlNode xmlAccount)
		{
			object[] results = this.EndInvoke(asyncResult);
			affectedOrders = ((System.Xml.XmlNode)(results[1]));
			xmlAccount = ((System.Xml.XmlNode)(results[2]));
			return ((TransactionError)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/ResetAlertLevel", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool ResetAlertLevel(Token token, System.Guid[] accountIDs)
		{
			object[] results = this.Invoke("ResetAlertLevel", new object[] {
																			   token,
																			   accountIDs});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginResetAlertLevel(Token token, System.Guid[] accountIDs, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("ResetAlertLevel", new object[] {
																		token,
																		accountIDs}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndResetAlertLevel(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/GetAccounts", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Xml.XmlNode GetAccounts(Token token, System.Guid[] accountIDs, bool includeTransactions)
		{
			object[] results = this.Invoke("GetAccounts", new object[] {
																		   token,
																		   accountIDs,
																		   includeTransactions});
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginGetAccounts(Token token, System.Guid[] accountIDs, bool includeTransactions, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetAccounts", new object[] {
																	token,
																	accountIDs,
																	includeTransactions}, callback, asyncState);
		}

		/// <remarks/>
		public System.Xml.XmlNode EndGetAccounts(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((System.Xml.XmlNode)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Update", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool Update(Token token, System.Xml.XmlNode update)
		{
			object[] results = this.Invoke("Update", new object[] {
																	  token,
																	  update});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdate(Token token, System.Xml.XmlNode update, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Update", new object[] {
															   token,
															   update}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndUpdate(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/StateServer/Update1", RequestNamespace = "http://www.omnicare.com/StateServer/", ResponseNamespace = "http://www.omnicare.com/StateServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool Update1(string sXml)
		{
			object[] results = this.Invoke("Update1", new object[] {
																	   sXml});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public System.IAsyncResult BeginUpdate1(string sXml, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Update1", new object[] {
																sXml}, callback, asyncState);
		}

		/// <remarks/>
		public bool EndUpdate1(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((bool)(results[0]));
		}
	}
}
