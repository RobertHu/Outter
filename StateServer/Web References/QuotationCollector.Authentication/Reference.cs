//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace iExchange.StateServer.QuotationCollector
{
	using System.Diagnostics;
	using System.Web.Services;
	using System.ComponentModel;
	using System.Web.Services.Protocols;
	using System;
	using System.Xml.Serialization;


	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name = "AuthenticationSoap", Namespace = "http://www.iExchange.com")]
	public partial class Authentication : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		private System.Threading.SendOrPostCallback LoginOperationCompleted;

		private System.Threading.SendOrPostCallback GetLoginStatusOperationCompleted;

		private System.Threading.SendOrPostCallback LogoutOperationCompleted;

		private bool useDefaultCredentialsSetExplicitly;

		public Authentication()
		{
			string urlSetting = System.Configuration.ConfigurationSettings.AppSettings["iExchange.StateServer.QuotationCollector.Authentication"];
			if ((urlSetting != null))
			{
				this.Url = string.Concat(urlSetting, "");
			}
			else
			{
				this.Url = "http://localhost/iExchange/QuotationCollector/Authentication.asmx";
			}
		}

		public new string Url
		{
			get
			{
				return base.Url;
			}
			set
			{
				if ((((this.IsLocalFileSystemWebService(base.Url) == true)
							&& (this.useDefaultCredentialsSetExplicitly == false))
							&& (this.IsLocalFileSystemWebService(value) == false)))
				{
					base.UseDefaultCredentials = false;
				}
				base.Url = value;
			}
		}

		public new bool UseDefaultCredentials
		{
			get
			{
				return base.UseDefaultCredentials;
			}
			set
			{
				base.UseDefaultCredentials = value;
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		/// <remarks/>
		public event LoginCompletedEventHandler LoginCompleted;

		/// <remarks/>
		public event GetLoginStatusCompletedEventHandler GetLoginStatusCompleted;

		/// <remarks/>
		public event LogoutCompletedEventHandler LogoutCompleted;

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.iExchange.com/Login", RequestNamespace = "http://www.iExchange.com", ResponseNamespace = "http://www.iExchange.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool Login(string userID, string password)
		{
			object[] results = this.Invoke("Login", new object[] {
                        userID,
                        password});
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public void LoginAsync(string userID, string password)
		{
			this.LoginAsync(userID, password, null);
		}

		/// <remarks/>
		public void LoginAsync(string userID, string password, object userState)
		{
			if ((this.LoginOperationCompleted == null))
			{
				this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
			}
			this.InvokeAsync("Login", new object[] {
                        userID,
                        password}, this.LoginOperationCompleted, userState);
		}

		private void OnLoginOperationCompleted(object arg)
		{
			if ((this.LoginCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.iExchange.com/GetLoginStatus", RequestNamespace = "http://www.iExchange.com", ResponseNamespace = "http://www.iExchange.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool GetLoginStatus()
		{
			object[] results = this.Invoke("GetLoginStatus", new object[0]);
			return ((bool)(results[0]));
		}

		/// <remarks/>
		public void GetLoginStatusAsync()
		{
			this.GetLoginStatusAsync(null);
		}

		/// <remarks/>
		public void GetLoginStatusAsync(object userState)
		{
			if ((this.GetLoginStatusOperationCompleted == null))
			{
				this.GetLoginStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginStatusOperationCompleted);
			}
			this.InvokeAsync("GetLoginStatus", new object[0], this.GetLoginStatusOperationCompleted, userState);
		}

		private void OnGetLoginStatusOperationCompleted(object arg)
		{
			if ((this.GetLoginStatusCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetLoginStatusCompleted(this, new GetLoginStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.iExchange.com/Logout", RequestNamespace = "http://www.iExchange.com", ResponseNamespace = "http://www.iExchange.com", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void Logout()
		{
			this.Invoke("Logout", new object[0]);
		}

		/// <remarks/>
		public void LogoutAsync()
		{
			this.LogoutAsync(null);
		}

		/// <remarks/>
		public void LogoutAsync(object userState)
		{
			if ((this.LogoutOperationCompleted == null))
			{
				this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
			}
			this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
		}

		private void OnLogoutOperationCompleted(object arg)
		{
			if ((this.LogoutCompleted != null))
			{
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}

		/// <remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}

		private bool IsLocalFileSystemWebService(string url)
		{
			if (((url == null)
						|| (url == string.Empty)))
			{
				return false;
			}
			System.Uri wsUri = new System.Uri(url);
			if (((wsUri.Port >= 1024)
						&& (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
			{
				return true;
			}
			return false;
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
	public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public bool Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((bool)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
	public delegate void GetLoginStatusCompletedEventHandler(object sender, GetLoginStatusCompletedEventArgs e);

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetLoginStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetLoginStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
			:
				base(exception, cancelled, userState)
		{
			this.results = results;
		}

		/// <remarks/>
		public bool Result
		{
			get
			{
				this.RaiseExceptionIfNecessary();
				return ((bool)(this.results[0]));
			}
		}
	}

	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
	public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591