//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace iExchange.StateServer.FaxEmail {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using iExchange.Common;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FaxEmailServiceSoap", Namespace="http://tempuri.org/")]
    public partial class FaxEmailService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NotifyOrderExecutedOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyOrderDeletedOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyResetStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyRiskLevelChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyBalanceChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyPasswordResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyRecoverPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyDeliveryListingOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyNewAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyTelephonePinResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageByMobileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FaxEmailService() {
            this.Url = global::iExchange.StateServer.Properties.Settings.Default.iExchange_StateServer_FaxEmail_FaxEmailService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NotifyOrderExecutedCompletedEventHandler NotifyOrderExecutedCompleted;
        
        /// <remarks/>
        public event NotifyOrderDeletedCompletedEventHandler NotifyOrderDeletedCompleted;
        
        /// <remarks/>
        public event NotifyResetStatementCompletedEventHandler NotifyResetStatementCompleted;
        
        /// <remarks/>
        public event NotifyRiskLevelChangedCompletedEventHandler NotifyRiskLevelChangedCompleted;
        
        /// <remarks/>
        public event NotifyBalanceChangedCompletedEventHandler NotifyBalanceChangedCompleted;
        
        /// <remarks/>
        public event NotifyPasswordResetCompletedEventHandler NotifyPasswordResetCompleted;
        
        /// <remarks/>
        public event NotifyRecoverPasswordCompletedEventHandler NotifyRecoverPasswordCompleted;
        
        /// <remarks/>
        public event NotifyDeliveryListingCompletedEventHandler NotifyDeliveryListingCompleted;
        
        /// <remarks/>
        public event NotifyNewAccountCompletedEventHandler NotifyNewAccountCompleted;
        
        /// <remarks/>
        public event NotifyTelephonePinResetCompletedEventHandler NotifyTelephonePinResetCompleted;
        
        /// <remarks/>
        public event SendMessageByMobileCompletedEventHandler SendMessageByMobileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyOrderExecuted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyOrderExecuted(System.Guid orderId) {
            this.Invoke("NotifyOrderExecuted", new object[] {
                        orderId});
        }
        
        /// <remarks/>
        public void NotifyOrderExecutedAsync(System.Guid orderId) {
            this.NotifyOrderExecutedAsync(orderId, null);
        }
        
        /// <remarks/>
        public void NotifyOrderExecutedAsync(System.Guid orderId, object userState) {
            if ((this.NotifyOrderExecutedOperationCompleted == null)) {
                this.NotifyOrderExecutedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyOrderExecutedOperationCompleted);
            }
            this.InvokeAsync("NotifyOrderExecuted", new object[] {
                        orderId}, this.NotifyOrderExecutedOperationCompleted, userState);
        }
        
        private void OnNotifyOrderExecutedOperationCompleted(object arg) {
            if ((this.NotifyOrderExecutedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyOrderExecutedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyOrderDeleted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyOrderDeleted(System.Guid orderId) {
            this.Invoke("NotifyOrderDeleted", new object[] {
                        orderId});
        }
        
        /// <remarks/>
        public void NotifyOrderDeletedAsync(System.Guid orderId) {
            this.NotifyOrderDeletedAsync(orderId, null);
        }
        
        /// <remarks/>
        public void NotifyOrderDeletedAsync(System.Guid orderId, object userState) {
            if ((this.NotifyOrderDeletedOperationCompleted == null)) {
                this.NotifyOrderDeletedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyOrderDeletedOperationCompleted);
            }
            this.InvokeAsync("NotifyOrderDeleted", new object[] {
                        orderId}, this.NotifyOrderDeletedOperationCompleted, userState);
        }
        
        private void OnNotifyOrderDeletedOperationCompleted(object arg) {
            if ((this.NotifyOrderDeletedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyOrderDeletedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyResetStatement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyResetStatement(System.DateTime tradeDay) {
            this.Invoke("NotifyResetStatement", new object[] {
                        tradeDay});
        }
        
        /// <remarks/>
        public void NotifyResetStatementAsync(System.DateTime tradeDay) {
            this.NotifyResetStatementAsync(tradeDay, null);
        }
        
        /// <remarks/>
        public void NotifyResetStatementAsync(System.DateTime tradeDay, object userState) {
            if ((this.NotifyResetStatementOperationCompleted == null)) {
                this.NotifyResetStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyResetStatementOperationCompleted);
            }
            this.InvokeAsync("NotifyResetStatement", new object[] {
                        tradeDay}, this.NotifyResetStatementOperationCompleted, userState);
        }
        
        private void OnNotifyResetStatementOperationCompleted(object arg) {
            if ((this.NotifyResetStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyResetStatementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyRiskLevelChanged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyRiskLevelChanged(RiskLevelChangedInfo info) {
            this.Invoke("NotifyRiskLevelChanged", new object[] {
                        info});
        }
        
        /// <remarks/>
        public void NotifyRiskLevelChangedAsync(RiskLevelChangedInfo info) {
            this.NotifyRiskLevelChangedAsync(info, null);
        }
        
        /// <remarks/>
        public void NotifyRiskLevelChangedAsync(RiskLevelChangedInfo info, object userState) {
            if ((this.NotifyRiskLevelChangedOperationCompleted == null)) {
                this.NotifyRiskLevelChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyRiskLevelChangedOperationCompleted);
            }
            this.InvokeAsync("NotifyRiskLevelChanged", new object[] {
                        info}, this.NotifyRiskLevelChangedOperationCompleted, userState);
        }
        
        private void OnNotifyRiskLevelChangedOperationCompleted(object arg) {
            if ((this.NotifyRiskLevelChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyRiskLevelChangedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyBalanceChanged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyBalanceChanged(BalanceInfo info) {
            this.Invoke("NotifyBalanceChanged", new object[] {
                        info});
        }
        
        /// <remarks/>
        public void NotifyBalanceChangedAsync(BalanceInfo info) {
            this.NotifyBalanceChangedAsync(info, null);
        }
        
        /// <remarks/>
        public void NotifyBalanceChangedAsync(BalanceInfo info, object userState) {
            if ((this.NotifyBalanceChangedOperationCompleted == null)) {
                this.NotifyBalanceChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyBalanceChangedOperationCompleted);
            }
            this.InvokeAsync("NotifyBalanceChanged", new object[] {
                        info}, this.NotifyBalanceChangedOperationCompleted, userState);
        }
        
        private void OnNotifyBalanceChangedOperationCompleted(object arg) {
            if ((this.NotifyBalanceChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyBalanceChangedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyPasswordReset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyPasswordReset(PasswordResetInfo info) {
            this.Invoke("NotifyPasswordReset", new object[] {
                        info});
        }
        
        /// <remarks/>
        public void NotifyPasswordResetAsync(PasswordResetInfo info) {
            this.NotifyPasswordResetAsync(info, null);
        }
        
        /// <remarks/>
        public void NotifyPasswordResetAsync(PasswordResetInfo info, object userState) {
            if ((this.NotifyPasswordResetOperationCompleted == null)) {
                this.NotifyPasswordResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyPasswordResetOperationCompleted);
            }
            this.InvokeAsync("NotifyPasswordReset", new object[] {
                        info}, this.NotifyPasswordResetOperationCompleted, userState);
        }
        
        private void OnNotifyPasswordResetOperationCompleted(object arg) {
            if ((this.NotifyPasswordResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyPasswordResetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyRecoverPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyRecoverPassword(RecoverPasswordInfo info) {
            this.Invoke("NotifyRecoverPassword", new object[] {
                        info});
        }
        
        /// <remarks/>
        public void NotifyRecoverPasswordAsync(RecoverPasswordInfo info) {
            this.NotifyRecoverPasswordAsync(info, null);
        }
        
        /// <remarks/>
        public void NotifyRecoverPasswordAsync(RecoverPasswordInfo info, object userState) {
            if ((this.NotifyRecoverPasswordOperationCompleted == null)) {
                this.NotifyRecoverPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyRecoverPasswordOperationCompleted);
            }
            this.InvokeAsync("NotifyRecoverPassword", new object[] {
                        info}, this.NotifyRecoverPasswordOperationCompleted, userState);
        }
        
        private void OnNotifyRecoverPasswordOperationCompleted(object arg) {
            if ((this.NotifyRecoverPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyRecoverPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyDeliveryListing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyDeliveryListing(System.Guid deliveryRequestId) {
            this.Invoke("NotifyDeliveryListing", new object[] {
                        deliveryRequestId});
        }
        
        /// <remarks/>
        public void NotifyDeliveryListingAsync(System.Guid deliveryRequestId) {
            this.NotifyDeliveryListingAsync(deliveryRequestId, null);
        }
        
        /// <remarks/>
        public void NotifyDeliveryListingAsync(System.Guid deliveryRequestId, object userState) {
            if ((this.NotifyDeliveryListingOperationCompleted == null)) {
                this.NotifyDeliveryListingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyDeliveryListingOperationCompleted);
            }
            this.InvokeAsync("NotifyDeliveryListing", new object[] {
                        deliveryRequestId}, this.NotifyDeliveryListingOperationCompleted, userState);
        }
        
        private void OnNotifyDeliveryListingOperationCompleted(object arg) {
            if ((this.NotifyDeliveryListingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyDeliveryListingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyNewAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyNewAccount(System.Guid accountId, string password, int sendType) {
            this.Invoke("NotifyNewAccount", new object[] {
                        accountId,
                        password,
                        sendType});
        }
        
        /// <remarks/>
        public void NotifyNewAccountAsync(System.Guid accountId, string password, int sendType) {
            this.NotifyNewAccountAsync(accountId, password, sendType, null);
        }
        
        /// <remarks/>
        public void NotifyNewAccountAsync(System.Guid accountId, string password, int sendType, object userState) {
            if ((this.NotifyNewAccountOperationCompleted == null)) {
                this.NotifyNewAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyNewAccountOperationCompleted);
            }
            this.InvokeAsync("NotifyNewAccount", new object[] {
                        accountId,
                        password,
                        sendType}, this.NotifyNewAccountOperationCompleted, userState);
        }
        
        private void OnNotifyNewAccountOperationCompleted(object arg) {
            if ((this.NotifyNewAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyNewAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyTelephonePinReset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyTelephonePinReset(VerificationCodeInfo info) {
            this.Invoke("NotifyTelephonePinReset", new object[] {
                        info});
        }
        
        /// <remarks/>
        public void NotifyTelephonePinResetAsync(VerificationCodeInfo info) {
            this.NotifyTelephonePinResetAsync(info, null);
        }
        
        /// <remarks/>
        public void NotifyTelephonePinResetAsync(VerificationCodeInfo info, object userState) {
            if ((this.NotifyTelephonePinResetOperationCompleted == null)) {
                this.NotifyTelephonePinResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyTelephonePinResetOperationCompleted);
            }
            this.InvokeAsync("NotifyTelephonePinReset", new object[] {
                        info}, this.NotifyTelephonePinResetOperationCompleted, userState);
        }
        
        private void OnNotifyTelephonePinResetOperationCompleted(object arg) {
            if ((this.NotifyTelephonePinResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyTelephonePinResetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessageByMobile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMessageByMobile(string message, string phoneNumber) {
            this.Invoke("SendMessageByMobile", new object[] {
                        message,
                        phoneNumber});
        }
        
        /// <remarks/>
        public void SendMessageByMobileAsync(string message, string phoneNumber) {
            this.SendMessageByMobileAsync(message, phoneNumber, null);
        }
        
        /// <remarks/>
        public void SendMessageByMobileAsync(string message, string phoneNumber, object userState) {
            if ((this.SendMessageByMobileOperationCompleted == null)) {
                this.SendMessageByMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageByMobileOperationCompleted);
            }
            this.InvokeAsync("SendMessageByMobile", new object[] {
                        message,
                        phoneNumber}, this.SendMessageByMobileOperationCompleted, userState);
        }
        
        private void OnSendMessageByMobileOperationCompleted(object arg) {
            if ((this.SendMessageByMobileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageByMobileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum BalanceChangeSubject {
        
        /// <remarks/>
        Deposit,
        
        /// <remarks/>
        Withdrawal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyOrderExecutedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyOrderDeletedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyResetStatementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyRiskLevelChangedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyBalanceChangedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyPasswordResetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyRecoverPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyDeliveryListingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyNewAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyTelephonePinResetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendMessageByMobileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591