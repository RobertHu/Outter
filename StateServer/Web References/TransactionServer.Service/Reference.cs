//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
using iExchange.Common;
using System.Data;
using System.Xml;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace iExchange.StateServer.TransactionServer
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSoap", Namespace = "http://www.omnicare.com/TransactionServer/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        public RegisterSoapHeader RegisterSoapHeaderValue;

        /// <remarks/>
        public Service()
        {
            string urlSetting = System.Configuration.ConfigurationSettings.AppSettings["iExchange.StateServer.TransactionServer.Service"];
            if ((urlSetting != null))
            {
                this.Url = string.Concat(urlSetting, "");
            }
            else
            {
                this.Url = "http://localhost/iExchange/TransactionServer/Service.asmx";
            }
        }


        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/HelloWorld", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld()
        {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Register", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Register(Token token, string url)
        {
            object[] results = this.Invoke("Register", new object[] {
                    token,
                    url});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRegister(Token token, string url, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Register", new object[] {
                    token,
                    url}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndRegister(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RegisterSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/SetQuotationOfSettlement", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetQuotationOfSettlement(Token token, OriginQuotation[] originQs, OverridedQuotation[] overridedQs, System.Guid[] instrumentIds)
        {
            this.Invoke("SetQuotationOfSettlement", new object[] {
                    token,
                    originQs,
                    overridedQs,
                    instrumentIds});
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetQuotationOfSettlement(Token token, OriginQuotation[] originQs, OverridedQuotation[] overridedQs, System.Guid[] instrumentIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetQuotationOfSettlement", new object[] {
                    token,
                    originQs,
                    overridedQs,
                    instrumentIds}, callback, asyncState);
        }

        /// <remarks/>
        public void EndSetQuotationOfSettlement(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RegisterSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/SetQuotation", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SetQuotation(Token token, OriginQuotation[] originQs, OverridedQuotation[] overridedQs, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false)] out AutoFillResult[] autoFillResults)
        {
            object[] results = this.Invoke("SetQuotation", new object[] {
                    token,
                    originQs,
                    overridedQs});
            autoFillResults = ((AutoFillResult[])(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetQuotation(Token token, OriginQuotation[] originQs, OverridedQuotation[] overridedQs, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetQuotation", new object[] {
                    token,
                    originQs,
                    overridedQs}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndSetQuotation(System.IAsyncResult asyncResult, out AutoFillResult[] autoFillResults)
        {
            object[] results = this.EndInvoke(asyncResult);
            autoFillResults = ((AutoFillResult[])(results[1]));
            return ((System.Xml.XmlNode)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/RedoLimitOrder", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DataSet RedoLimitOrder(Token token, XmlNode orderIds, out TransactionError returnValue)
        {
            object[] results = this.Invoke("RedoLimitOrder", new object[] {
                    token,
                    orderIds});
            returnValue = ((TransactionError)(results[1]));
            return ((DataSet)(results[0]));
        }

        public System.IAsyncResult BeginRedoLimitOrder(Token token, XmlNode orderIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RedoLimitOrder", new object[] {
                    token,
                    orderIds}, callback, asyncState);
        }

        /// <remarks/>
        public DataSet EndRedoLimitOrder(System.IAsyncResult asyncResult, out TransactionError returnValue)
        {
            object[] results = this.EndInvoke(asyncResult);
            returnValue = ((TransactionError)(results[1]));
            return ((DataSet)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/UpdateAccountLock", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateAccountLock(Token token, System.Xml.XmlNode accountLockChanges)
        {
            object[] results = this.Invoke("UpdateAccountLock", new object[] {
                    token,
                    accountLockChanges});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateAccountLock(Token token, System.Xml.XmlNode accountLockChanges, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateAccountLock", new object[] {
                    token,
                    accountLockChanges}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdateAccountLock(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Place", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Place(Token token, ref System.Xml.XmlNode xmlTran, out PlaceExtraInfo extraInfo, out System.Xml.XmlNode xmlHitOrders)
        {
            object[] results = this.Invoke("Place", new object[] {
                    token,
                    xmlTran});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            extraInfo = ((PlaceExtraInfo)(results[2]));
            xmlHitOrders = ((System.Xml.XmlNode)(results[3]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginPlace(Token token, System.Xml.XmlNode xmlTran, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Place", new object[] {
                    token,
                    xmlTran}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndPlace(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out PlaceExtraInfo extraInfo, out System.Xml.XmlNode xmlHitOrders)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            extraInfo = ((PlaceExtraInfo)(results[2]));
            xmlHitOrders = ((System.Xml.XmlNode)(results[3]));
            return ((TransactionError)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/NotifyDelivery", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyDelivery(Token token, Guid deliveryRequestId, DateTime availableDeliveryTime, string title, string notifyMessage, out Guid accountId)
        {
            object[] results = this.Invoke("NotifyDelivery", new object[] {
                    token,
                    deliveryRequestId,
                    availableDeliveryTime,
                    title,
                    notifyMessage});
            accountId = ((Guid)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginNotifyDelivery(Token token, Guid deliveryRequestId, DateTime availableDeliveryTime, string title, string notifyMessage, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("NotifyDelivery", new object[] {
                    token,
                    deliveryRequestId,
                    availableDeliveryTime,
                    title,
                    notifyMessage}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndNotifyDelivery(System.IAsyncResult asyncResult, out Guid accountId)
        {
            object[] results = this.EndInvoke(asyncResult);
            accountId = ((Guid)(results[1]));
            return ((bool)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/CancelDelivery", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelDelivery(Token token, Guid deliveryRequestId, out Guid accountId, out int status)
        {
            object[] results = this.Invoke("CancelDelivery", new object[] {
                    token,
                    deliveryRequestId});
            accountId = ((Guid)(results[1]));
            status = ((int)(results[2]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCancelDelivery(Token token, Guid deliveryRequestId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CancelDelivery", new object[] {
                    token,
                    deliveryRequestId}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndCancelDelivery(System.IAsyncResult asyncResult, out Guid accountId, out int status)
        {
            object[] results = this.EndInvoke(asyncResult);
            accountId = ((Guid)(results[1]));
            status = ((int)(results[2]));
            return ((bool)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/SetPriceAlerts", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetPriceAlerts(Token token, System.Xml.XmlNode priceAlertsNode)
        {
            object[] results = this.Invoke("SetPriceAlerts", new object[] {
                    token,
                    priceAlertsNode});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSetPriceAlerts(Token token, System.Xml.XmlNode priceAlertsNode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetPriceAlerts", new object[] {
                    token,
                    priceAlertsNode}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSetPriceAlerts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/ApplyDelivery", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError ApplyDelivery(Token token, ref System.Xml.XmlNode deliveryRequire, out string code, out string balance, out string usableMargin)
        {
            object[] results = this.Invoke("ApplyDelivery", new object[] {
                    token,
                    deliveryRequire});
            deliveryRequire = ((System.Xml.XmlNode)(results[1]));
            code = ((string)(results[2]));
            balance = ((string)(results[3]));
            usableMargin = ((string)(results[4]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginApplyDelivery(Token token, System.Xml.XmlNode deliveryRequire, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ApplyDelivery", new object[] {
                    token,
                    deliveryRequire}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndApplyDelivery(System.IAsyncResult asyncResult, out System.Xml.XmlNode deliveryRequire, out string code, out string balance, out string usableMargin)
        {
            object[] results = this.EndInvoke(asyncResult);
            deliveryRequire = ((System.Xml.XmlNode)(results[1]));
            code = ((string)(results[2]));
            balance = ((string)(results[3]));
            usableMargin = ((string)(results[4]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Cancel", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Cancel(Token token, System.Guid tranID, CancelReason cancelReason, out System.Guid instrumentID, out System.Guid accountID)
        {
            object[] results = this.Invoke("Cancel", new object[] {
                    token,
                    tranID,
                    cancelReason});
            instrumentID = ((System.Guid)(results[1]));
            accountID = ((System.Guid)(results[2]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCancel(Token token, System.Guid tranID, CancelReason cancelReason, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Cancel", new object[] {
                    token,
                    tranID,
                    cancelReason}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndCancel(System.IAsyncResult asyncResult, out System.Guid instrumentID, out System.Guid accountID)
        {
            object[] results = this.EndInvoke(asyncResult);
            instrumentID = ((System.Guid)(results[1]));
            accountID = ((System.Guid)(results[2]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Execute", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Execute(Token token, System.Guid tranID, string buyPrice, string sellPrice, string lot, System.Guid executedOrderID, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount)
        {
            object[] results = this.Invoke("Execute", new object[] {
                    token,
                    tranID,
                    buyPrice,
                    sellPrice,
                    lot,
                    executedOrderID});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginExecute(Token token, System.Guid tranID, string buyPrice, string sellPrice, string lot, System.Guid executedOrderID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Execute", new object[] {
                    token,
                    tranID,
                    buyPrice,
                    sellPrice,
                    lot,
                    executedOrderID}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndExecute(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/MultipleClose", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError MultipleClose(Token token, System.Guid[] orderIds, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount)
        {
            object[] results = this.Invoke("MultipleClose", new object[] {
                    token,
                    orderIds});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMultipleClose(Token token, System.Guid[] orderIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MultipleClose", new object[] {
                    token,
                    orderIds}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndMultipleClose(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/AcceptPlace", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError AcceptPlace(Token token, System.Guid tranID, out System.Guid instrumentID,
            out System.Guid accountID, out PlaceExtraInfo extraInfo, out System.Xml.XmlNode xmlHitOrders)
        {
            object[] results = this.Invoke("AcceptPlace", new object[] {
                    token,
                    tranID});
            instrumentID = ((System.Guid)(results[1]));
            accountID = ((System.Guid)(results[2]));
            extraInfo = ((PlaceExtraInfo)(results[3]));
            xmlHitOrders = ((System.Xml.XmlNode)(results[4]));
            return ((TransactionError)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/ChangeSystemStatus", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeSystemStatus(Token token, SystemStatus newStatus)
        {
            object[] results = this.Invoke("ChangeSystemStatus", new object[] {
                    token,
                    newStatus});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAcceptPlace(Token token, System.Guid tranID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AcceptPlace", new object[] {
                    token,
                    tranID}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndAcceptPlace(System.IAsyncResult asyncResult, out System.Guid instrumentID,
            out System.Guid accountID, out PlaceExtraInfo extraInfo, out System.Xml.XmlNode xmlHitOrders)
        {
            object[] results = this.EndInvoke(asyncResult);
            instrumentID = ((System.Guid)(results[1]));
            accountID = ((System.Guid)(results[2]));
            extraInfo = ((PlaceExtraInfo)(results[3]));
            xmlHitOrders = ((System.Xml.XmlNode)(results[4]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Assign", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Assign(Token token, ref System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlInstrument, out System.Xml.XmlNode xmlAgentAccount)
        {
            object[] results = this.Invoke("Assign", new object[] {
                    token,
                    xmlTran});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            xmlInstrument = ((System.Xml.XmlNode)(results[3]));
            xmlAgentAccount = ((System.Xml.XmlNode)(results[4]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAssign(Token token, System.Xml.XmlNode xmlTran, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Assign", new object[] {
                    token,
                    xmlTran}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndAssign(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlInstrument, out System.Xml.XmlNode xmlAgentAccount)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            xmlInstrument = ((System.Xml.XmlNode)(results[3]));
            xmlAgentAccount = ((System.Xml.XmlNode)(results[4]));
            return ((TransactionError)(results[0]));
        }


        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/BookWithTimeout", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError BookWithTimeout(Token token, ref System.Xml.XmlNode xmlTran, bool preserveCalculation, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlAffectedOrders, int timeout)
        {
            object[] results = this.Invoke("BookWithTimeout", new object[] {
                    token,
                    xmlTran,
                    preserveCalculation,
                    timeout});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            xmlAffectedOrders = ((System.Xml.XmlNode)(results[3]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBookWithTimeout(Token token, System.Xml.XmlNode xmlTran, bool preserveCalculation, int timeout, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BookWithTimeout", new object[] {
                    token,
                    xmlTran,
                    preserveCalculation,
                    timeout}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndBookWithTimeout(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlAffectedOrders)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            xmlAffectedOrders = ((System.Xml.XmlNode)(results[3]));
            return ((TransactionError)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/BookOrders", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError[] BookOrders(Token token, XmlElement[] xmlTrans, int timeout, out XmlElement[] xmlTranResults,
            out XmlElement[] xmlAccounts, out XmlElement[] xmlAffectedOrders)
        {
            object[] results = this.Invoke("BookOrders", new object[] {
                    token,
                    xmlTrans,
                    timeout});
            xmlTranResults = ((System.Xml.XmlElement[])(results[1]));
            xmlAccounts = ((System.Xml.XmlElement[])(results[2]));
            xmlAffectedOrders = ((System.Xml.XmlElement[])(results[3]));
            return ((TransactionError[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBookOrders(Token token, XmlElement[] xmlTrans, int timeout, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BookOrders", new object[] {
                    token,
                    xmlTrans,
                    timeout}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError[] EndBookOrders(System.IAsyncResult asyncResult, out XmlElement[] xmlTranResults,
            out XmlElement[] xmlAccounts, out XmlElement[] xmlAffectedOrders)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTranResults = ((System.Xml.XmlElement[])(results[1]));
            xmlAccounts = ((System.Xml.XmlElement[])(results[2]));
            xmlAffectedOrders = ((System.Xml.XmlElement[])(results[3]));
            return ((TransactionError[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Book", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Book(Token token, ref System.Xml.XmlNode xmlTran, bool preserveCalculation, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlAffectedOrders)
        {
            object[] results = this.Invoke("Book", new object[] {
                    token,
                    xmlTran,
                    preserveCalculation});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            xmlAffectedOrders = ((System.Xml.XmlNode)(results[3]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBook(Token token, System.Xml.XmlNode xmlTran, bool preserveCalculation, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Book", new object[] {
                    token,
                    xmlTran,
                    preserveCalculation}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndBook(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount, out System.Xml.XmlNode xmlAffectedOrders)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            xmlAffectedOrders = ((System.Xml.XmlNode)(results[3]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Delete", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Delete(Token token, System.Guid orderID, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount)
        {
            object[] results = this.Invoke("Delete", new object[] {
                    token,
                    orderID});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDelete(Token token, System.Guid orderID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Delete", new object[] {
                    token,
                    orderID}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndDelete(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Delete2", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError Delete2(Token token, System.Guid orderID, bool notifyByEmail, bool isPayForInstalmentDebitInterest, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount, out System.Guid instrumentID, out System.Guid[] affectedDeletedOrders, int timeout)
        {
            object[] results = this.Invoke("Delete2", new object[] {
                    token,
                    orderID, 
                    notifyByEmail,
                    isPayForInstalmentDebitInterest, 
                    timeout});
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            instrumentID = ((System.Guid)(results[3]));
            affectedDeletedOrders = ((System.Guid[])(results[4]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDelete2(Token token, System.Guid orderID, bool notifyByEmail, bool isPayForInstalmentDebitInterest, int timeout, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Delete2", new object[] {
                    token,
                    orderID,
                    notifyByEmail,isPayForInstalmentDebitInterest,timeout}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndDelete2(System.IAsyncResult asyncResult, out System.Xml.XmlNode xmlTran, out System.Xml.XmlNode xmlAccount, out System.Guid instrumentID, System.Guid[] affectedDeletedOrders)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTran = ((System.Xml.XmlNode)(results[1]));
            xmlAccount = ((System.Xml.XmlNode)(results[2]));
            instrumentID = ((System.Guid)(results[3]));
            affectedDeletedOrders = ((System.Guid[])(results[4]));
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetAcountInfo", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAcountInfo(Token token, System.Guid tranID)
        {
            object[] results = this.Invoke("GetAcountInfo", new object[] {
                    token,
                    tranID});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAcountInfo(Token token, System.Guid tranID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAcountInfo", new object[] {
                    token,
                    tranID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetAcountInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetMemoryBalanceNecessaryEquityExcludeAlerted", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMemoryBalanceNecessaryEquityExcludeAlerted(Token token)
        {
            object[] results = this.Invoke("GetMemoryBalanceNecessaryEquityExcludeAlerted", new object[] {
                    token});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetMemoryBalanceNecessaryEquityExcludeAlerted(Token token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetMemoryBalanceNecessaryEquityExcludeAlerted", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetMemoryBalanceNecessaryEquityExcludeAlerted(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/CheckDailyRisk", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError CheckDailyRisk(Token token)
        {
            object[] results = this.Invoke("CheckDailyRisk", new object[] {
                    token});
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckDailyRisk(Token token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckDailyRisk", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndCheckDailyRisk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/ResetHit", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetHit(Token token, System.Guid[] orderIDs)
        {
            this.Invoke("ResetHit", new object[] {
                    token,
                    orderIDs});
        }

        /// <remarks/>
        public System.IAsyncResult BeginResetHit(Token token, System.Guid[] orderIDs, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ResetHit", new object[] {
                    token,
                    orderIDs}, callback, asyncState);
        }

        /// <remarks/>
        public void EndResetHit(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/ResetAlertLevel", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AlertLevel[] ResetAlertLevel(Token token, System.Guid[] accountIDs)
        {
            object[] results = this.Invoke("ResetAlertLevel", new object[] {
                    token,
                    accountIDs});
            return ((AlertLevel[])(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/ChangeLeverage", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeLeverage(Token token, Guid accountId, int leverage, out decimal necessary)
        {
            object[] results = this.Invoke("ChangeLeverage", new object[] {
                    token, accountId, leverage});
            necessary = (decimal)(results[1]);
            return (bool)(results[0]);
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/NotifyPasswordChanged", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyPasswordChanged(Guid customerId, string loginName, string newPassword)
        {
            object[] results = this.Invoke("NotifyPasswordChanged", new object[] {
                        customerId,
                        loginName,
                        newPassword});
            return ((bool)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/NotifyTelephonePinReset", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyTelephonePinReset(Guid customerId, Guid accountId, string verificationCode)
        {
            object[] results = this.Invoke("NotifyTelephonePinReset", new object[] {
                        customerId,
                        accountId,
                        verificationCode});
            return ((bool)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/InstalmentPayoff", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError InstalmentPayoff(Token token, Guid submitorId, Guid accountId, Guid currencyId,
            decimal sumSourcePaymentAmount, decimal sumSourceTerminateFee, string instalmentXml, string terminateXml)
        {
            object[] results = this.Invoke("InstalmentPayoff", new object[] {
                        token, 
                        submitorId,
                        accountId,
                        currencyId,
                        sumSourcePaymentAmount,
                        sumSourceTerminateFee,
                        instalmentXml,
                        terminateXml
            });
            return ((TransactionError)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/InstalmentUndoPayoff", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError InstalmentUndoPayoff(Token token, Guid submitorId, Guid accountId, 
            string undoInstalmentXml)
        {
            object[] results = this.Invoke("InstalmentUndoPayoff", new object[] {
                        token, 
                        submitorId,
                        accountId,
                        undoInstalmentXml
            });
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInstalmentUndoPayoff(Token token, Guid submitorId, Guid accountId,
            string undoInstalmentXml, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InstalmentUndoPayoff", new object[] {
                    token,
                    submitorId,
                    accountId,
                    undoInstalmentXml}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndInstalmentUndoPayoff(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransactionError)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginResetAlertLevel(Token token, System.Guid[] accountIDs, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ResetAlertLevel", new object[] {
                    token,
                    accountIDs}, callback, asyncState);
        }

        /// <remarks/>
        public AlertLevel[] EndResetAlertLevel(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((AlertLevel[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RegisterSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Update", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Update(Token token, [System.Xml.Serialization.XmlElementAttribute("update")] System.Xml.XmlNode update1)
        {
            object[] results = this.Invoke("Update", new object[] {
                    token,
                    update1});
            return ((bool)(results[0]));
        }

        /// <remarks/>     
        public System.IAsyncResult BeginUpdate(Token token, System.Xml.XmlNode update1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Update", new object[] {
                    token,
                    update1}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndUpdate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetAccounts", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccounts(Token token, System.Guid[] accountIDs, bool includeTransactions)
        {
            object[] results = this.Invoke("GetAccounts", new object[] {
                    token,
                    accountIDs,
                    includeTransactions});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAccounts(Token token, System.Guid[] accountIDs, bool includeTransactions, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccounts", new object[] {
                    token,
                    accountIDs,
                    includeTransactions}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetAccounts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetAccounts2", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccounts2(string accountID, bool includeTransactions, string instrumentID)
        {
            object[] results = this.Invoke("GetAccounts2", new object[] {
                    accountID,
                    includeTransactions,
                    instrumentID});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAccounts2(string accountID, bool includeTransactions, string instrumentID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccounts2", new object[] {
                    accountID,
                    includeTransactions,
                    instrumentID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetAccounts2(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetAccounts3", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccounts3(bool includeTransactions, string instrumentID)
        {
            object[] results = this.Invoke("GetAccounts3", new object[] {
                    includeTransactions,
                    instrumentID});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAccounts3(bool includeTransactions, string instrumentID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccounts3", new object[] {
                    includeTransactions,
                    instrumentID}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetAccounts3(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetAccounts4", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccounts4(Token token, System.Guid[] accountIDs, bool includeTransactions, bool onlyCutOrder)
        {
            object[] results = this.Invoke("GetAccounts4", new object[] {
                    token,
                    accountIDs,
                    includeTransactions,
                    onlyCutOrder});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAccounts4(Token token, System.Guid[] accountIDs, bool includeTransactions, bool onlyCutOrder, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccounts4", new object[] {
                    token,
                    accountIDs,
                    includeTransactions,
                    onlyCutOrder}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetAccounts4(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetAccounts5", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccounts5(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, bool includeTransactions)
        {
            object[] results = this.Invoke("GetAccounts5", new object[] {
                    token,
                    accountIDs,
                    instrumentIDs,
                    includeTransactions});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAccounts5(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, bool includeTransactions, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccounts5", new object[] {
                    token,
                    accountIDs,
                    instrumentIDs,
                    includeTransactions}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetAccounts5(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetOpenInterestInstrumentSummary", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetOpenInterestInstrumentSummary(Token token, bool isGroupByOriginCode, string[] blotterCodeSelecteds)
        {
            object[] results = this.Invoke("GetOpenInterestInstrumentSummary", new object[] {
                    token,
                    isGroupByOriginCode,
                    blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOpenInterestInstrumentSummary(Token token, bool isGroupByOriginCode, string[] blotterCodeSelecteds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOpenInterestInstrumentSummary", new object[] {
                    token,
                    isGroupByOriginCode,
                    blotterCodeSelecteds}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetOpenInterestInstrumentSummary(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetOpenInterestSummary", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetOpenInterestSummary(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds)
        {
            object[] results = this.Invoke("GetOpenInterestSummary", new object[] {
                    token,
                    accountIDs,
                    instrumentIDs,
                    blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOpenInterestSummary(Token token, System.Guid[] accountIDs, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOpenInterestSummary", new object[] {
                    token,
                    accountIDs,
                    instrumentIDs,
                    blotterCodeSelecteds}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetOpenInterestSummary(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetOpenInterestSummaryOrderList", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetOpenInterestSummaryOrderList(Token token, System.Guid accountId, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds)
        {
            object[] results = this.Invoke("GetOpenInterestSummaryOrderList", new object[] {
                    token,
                    accountId,
                    instrumentIDs,
                    blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOpenInterestSummaryOrderList(Token token, System.Guid accountId, System.Guid[] instrumentIDs, string[] blotterCodeSelecteds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOpenInterestSummaryOrderList", new object[] {
                    token,
                    accountId,
                    instrumentIDs,
                    blotterCodeSelecteds}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetOpenInterestSummaryOrderList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetGroupNetPosition", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGroupNetPosition(Token token, string permissionName, Guid[] accountIDs, Guid[] instrumentIDs, bool showActualQuantity, string[] blotterCodeSelecteds)
        {
            object[] results = this.Invoke("GetGroupNetPosition", new object[] {
                    token,
                    permissionName,
                    accountIDs,
                    instrumentIDs,
                    showActualQuantity,
                    blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetAccountsProfitWithin", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XmlNode GetAccountsProfitWithin(Token token, decimal? minProfit, bool includeMinProfit, decimal? maxProfit, bool includeMaxProfit)
        {
            object[] results = this.Invoke("GetAccountsProfitWithin", new object[] {
                    token,
                    minProfit,
                    includeMinProfit,
                    maxProfit,
                    includeMaxProfit});
            return ((System.Xml.XmlNode)(results[0]));
        }

        public System.IAsyncResult BeginGetAccountsProfitWithin(Token token, decimal? minProfit, bool includeMinProfit, decimal? maxProfit, bool includeMaxProfit, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccountsProfitWithin", new object[] {
                    token,
                    minProfit,
                    includeMinProfit,
                    maxProfit,
                    includeMaxProfit}, callback, asyncState);
        }

        public System.Xml.XmlNode EndGetAccountsProfitWithin(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetGroupNetPositionForManager", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGroupNetPositionForManager(Token token, string permissionName, Guid[] accountGroupIDs, Guid[] instrumentGroupIDs, bool showActualQuantity, string[] blotterCodeSelecteds)
        {
            object[] results = this.Invoke("GetGroupNetPositionForManager", new object[] {
                    token,
                    permissionName,
                    accountGroupIDs,
                    instrumentGroupIDs,
                    showActualQuantity,
                    blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetGroupNetPosition(Token token, string permissionName, Guid[] accountIDs, Guid[] instrumentIDs, bool showActualQuantity, string[] blotterCodeSelecteds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetGroupNetPosition", new object[] {
                    token,
                    permissionName,
                    accountIDs,
                    instrumentIDs,
                    showActualQuantity,
                    blotterCodeSelecteds}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetGroupNetPosition(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetGroupNetPositionInstrument", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGroupNetPositionInstrument(Token token, string permissionName, Guid accountId, Guid instrumentId, bool showActualQuantity, string[] blotterCodeSelecteds)
        {
            object[] results = this.Invoke("GetGroupNetPositionInstrument", new object[] {
                    token,
                    permissionName,
                    accountId,
                    instrumentId,
                    showActualQuantity,
                    blotterCodeSelecteds});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetGroupNetPositionInstrument(Token token, string permissionName, Guid accountId, Guid instrumentId, bool showActualQuantity, string[] blotterCodeSelecteds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetGroupNetPositionInstrument", new object[] {
                    token,
                    permissionName,
                    accountId,
                    instrumentId,
                    showActualQuantity,
                    blotterCodeSelecteds}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetGroupNetPositionInstrument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetAccountsForInit", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccountsForInit(System.Guid[] accountIDs)
        {
            object[] results = this.Invoke("GetAccountsForInit", new object[] {
                    accountIDs});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAccountsForInit(System.Guid[] accountIDs, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccountsForInit", new object[] {
                    accountIDs}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetAccountsForInit(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetOrdersForGetAutoPrice", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetOrdersForGetAutoPrice(System.Guid[] orderIDs)
        {
            object[] results = this.Invoke("GetOrdersForGetAutoPrice", new object[] {
                    orderIDs});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOrdersForGetAutoPrice(System.Guid[] orderIDs, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOrdersForGetAutoPrice", new object[] {
                    orderIDs}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetOrdersForGetAutoPrice(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/VerifyTransaction", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid[] VerifyTransaction(Token token, System.Guid[] transactionIDs, out System.Xml.XmlNode[] xmlTrans, out System.Xml.XmlNode[] xmlAccounts)
        {
            object[] results = this.Invoke("VerifyTransaction", new object[] {
                    token,
                    transactionIDs});
            xmlTrans = ((System.Xml.XmlNode[])(results[1]));
            xmlAccounts = ((System.Xml.XmlNode[])(results[2]));
            return ((System.Guid[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginVerifyTransaction(Token token, System.Guid[] transactionIDs, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("VerifyTransaction", new object[] {
                    token,
                    transactionIDs}, callback, asyncState);
        }

        /// <remarks/>
        public System.Guid[] EndVerifyTransaction(System.IAsyncResult asyncResult, out System.Xml.XmlNode[] xmlTrans, out System.Xml.XmlNode[] xmlAccounts)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlTrans = ((System.Xml.XmlNode[])(results[1]));
            xmlAccounts = ((System.Xml.XmlNode[])(results[2]));
            return ((System.Guid[])(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Test", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Test(string accountID)
        {
            this.Invoke("Test", new object[] {
                    accountID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginTest(string accountID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Test", new object[] {
                    accountID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndTest(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Reset", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Reset()
        {
            this.Invoke("Reset", new object[0]);
        }

        /// <remarks/>
        public System.IAsyncResult BeginReset(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Reset", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public void EndReset(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/DumpMemory", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DumpMemory(string accountIds)
        {
            object[] results = this.Invoke("DumpMemory", new object[] {
                    accountIds});
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDumpMemory(string accountIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DumpMemory", new object[] {
                    accountIds}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndDumpMemory(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/GetAccountStatus", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAccountStatus(Token token, Guid accountId, Guid instrumentId, OrderType orderType, bool needOutputPrice, out string buyPrice, out string sellPrice)
        {
            object[] results = this.Invoke("GetAccountStatus", new object[] {
                    token,
                    accountId,
                    instrumentId,
                    orderType,
                    needOutputPrice});
            buyPrice = ((System.String)(results[1]));
            sellPrice = ((System.String)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAccountStatus(Token token, Guid accountId, Guid instrumentId, OrderType orderType, bool needOutputPrice, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccountStatus", new object[] {
                    token,
                    accountId,
                    instrumentId,
                    orderType,
                    needOutputPrice}, callback, asyncState);
        }

        /// <remarks/>
        public System.Xml.XmlNode EndGetAccountStatus(System.IAsyncResult asyncResult, out string buyPrice, out string sellPrice)
        {
            object[] results = this.EndInvoke(asyncResult);
            buyPrice = ((System.String)(results[1]));
            sellPrice = ((System.String)(results[2]));
            return ((System.Xml.XmlNode)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/ApplyTransfer", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError ApplyTransfer(Token token, Guid sourceAccountID, Guid sourceCurrencyID,
            decimal sourceAmount, Guid targetAccountID, Guid targetCurrencyID, decimal targetAmount,
            decimal rate, DateTime expireDate)
        {
            object[] results = this.Invoke("ApplyTransfer", new object[] {
                    token,
                    sourceAccountID, 
                    sourceCurrencyID,
                    sourceAmount, 
                    targetAccountID, 
                    targetCurrencyID, 
                    targetAmount,
                    rate, 
                    expireDate});
            return ((TransactionError)(results[0]));
        }

        public System.IAsyncResult BeginApplyTransfer(Token token, Guid sourceAccountID, Guid sourceCurrencyID,
            decimal sourceAmount, Guid targetAccountID, Guid targetCurrencyID, decimal targetAmount,
            decimal rate, DateTime expireDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ApplyTransfer", new object[] {
                    token,
                    sourceAccountID, 
                    sourceCurrencyID,
                    sourceAmount, 
                    targetAccountID, 
                    targetCurrencyID, 
                    targetAmount,
                    rate, 
                    expireDate}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndApplyTransfer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransactionError)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/AcceptTransfer", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError AcceptTransfer(Token token, Guid transferID)
        {
            object[] results = this.Invoke("AcceptTransfer", new object[] {
                    token,
                    transferID});
            return ((TransactionError)(results[0]));
        }

        public System.IAsyncResult BeginAcceptTransfer(Token token, Guid transferID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AcceptTransfer", new object[] {
                    token,
                    transferID}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndAcceptTransfer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransactionError)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/DeclineTransfer", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransactionError DeclineTransfer(Token token, Guid transferID)
        {
            object[] results = this.Invoke("DeclineTransfer", new object[] {
                    token,
                    transferID});
            return ((TransactionError)(results[0]));
        }

        public System.IAsyncResult BeginDeclineTransfer(Token token, Guid transferID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeclineTransfer", new object[] {
                    token,
                    transferID}, callback, asyncState);
        }

        /// <remarks/>
        public TransactionError EndDeclineTransfer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransactionError)(results[0]));
        }

        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.omnicare.com/TransactionServer/Rehit", RequestNamespace = "http://www.omnicare.com/TransactionServer/", ResponseNamespace = "http://www.omnicare.com/TransactionServer/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Guid[] Rehit(Token token, Guid[] orderIDs, string[] hitPrices, out XmlNode xmlHitOrders, out AutoFillResult[] autoFillResults)
        {
            object[] results = this.Invoke("Rehit", new object[] {
                    token,
                    orderIDs,
                    hitPrices});
            xmlHitOrders = (XmlNode)(results[1]);
            autoFillResults = (AutoFillResult[])(results[2]);
            return ((Guid[])(results[0]));
        }

        public System.IAsyncResult BeginRehit(Token token, Guid[] orderIDs, string[] hitPrices, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Rehit", new object[] {
                    token,
                    orderIDs,
                    hitPrices}, callback, asyncState);
        }

        /// <remarks/>
        public Guid[] EndRehit(System.IAsyncResult asyncResult, out XmlNode xmlHitOrders, out AutoFillResult[] autoFillResults)
        {
            object[] results = this.EndInvoke(asyncResult);
            xmlHitOrders = (XmlNode)(results[1]);
            autoFillResults = (AutoFillResult[])(results[2]);
            return ((Guid[])(results[0]));
        }
    }
}